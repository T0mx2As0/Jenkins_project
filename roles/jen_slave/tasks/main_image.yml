---
- name: Include variables
  include_vars: "../../../inventory/vars.yml"

- name: Take Pass
  containers.podman.podman_container_exec:
    name: jenkins_master
    command: /bin/bash -c "cat /var/jenkins_home/secrets/initialAdminPassword"
  register: pass_admin

- name: copy config.xml
  copy:
    src: ../file/config.xml
    dest: /home/vagrant

- name: Custom config.xml
  shell:
    cmd: sed -i 's/NodoTest/{{Hostname_Slave}}/g' /home/vagrant/config.xml

- name: Download cli.jar
  get_url:
    url: "{{url_jenkins}}/jnlpJars/jenkins-cli.jar"
    dest: /home/vagrant/

- name: Add slave node
  shell:
    cmd: cat config.xml | java -jar jenkins-cli.jar -s {{url_jenkins}} -auth {{user_admin}}:{{pass_admin.stdout_lines[0]}} create-node "{{Hostname_Slave}}"
    chdir: /home/vagrant/

- name: Get secret file
  shell:
    cmd: curl -u "{{user_admin}}":"{{pass_admin.stdout_lines[0]}}" -O "{{url_jenkins}}"/computer/"{{Hostname_Slave}}"/slave-agent.jnlp
    chdir: /home/vagrant/

- name: Get secret
  shell:
    cmd: grep -oP '(?<=<argument>)[a-f0-9]{64}(?=</argument>)' slave-agent.jnlp
    chdir: /home/vagrant/
  register: secret

- name: start jenkins slave container #aggiungere hostname
  containers.podman.podman_container:
      name: "{{Hostname_Slave}}"
      image: docker.io/jenkins/inbound-agent
      state: started
      privileged: true
      restart_policy: always
      network: podman_internal
      ip: "{{IP_slave}}"
      cap_add:
       - NET_RAW
      env:
        JENKINS_URL: "{{url_jenkins}}"
        JENKINS_SECRET: "{{secret.stdout_lines[0]}}"
        JENKINS_AGENT_NAME: "{{Hostname_Slave}}"
        JENKINS_AGENT_WORKDIR: "/home/jenkins"


- name: Change owner and group
  containers.podman.podman_container_exec:
    name: "{{Hostname_Slave}}"
    privileged: true
    command: /bin/bash -c "apt update"

- name: Change owner and group
  containers.podman.podman_container_exec:
    name: "{{Hostname_Slave}}"
    privileged: true
    command: /bin/bash -c "apt install sudo docker.io"